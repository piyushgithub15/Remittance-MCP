# Multi-stage build for REST API Server
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S remittance -u 1001

# Copy package files
COPY package*.json ./

# Install dependencies (including dev dependencies for build)
RUN npm ci && \
    npm cache clean --force

# Copy source code
COPY --chown=remittance:nodejs . .

# Build stage - remove dev dependencies
FROM base AS build

# Remove dev dependencies to reduce image size
RUN npm prune --production && \
    npm cache clean --force

# Production stage
FROM node:18-alpine AS production

# Set working directory
WORKDIR /app

# Install only runtime dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S remittance -u 1001

# Copy built application from build stage
COPY --from=build --chown=remittance:nodejs /app/node_modules ./node_modules
COPY --from=build --chown=remittance:nodejs /app/src ./src
COPY --from=build --chown=remittance:nodejs /app/package*.json ./

# Create necessary directories
RUN mkdir -p /app/logs && \
    chown -R remittance:nodejs /app

# Switch to non-root user
USER remittance

# Expose port (REST API uses 8070)
EXPOSE 8070

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the REST API server
CMD ["node", "src/main.js"]

# Labels for metadata
